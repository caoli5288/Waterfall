From 4eb927bb9546be184307fdeb39b011e07975c96d Mon Sep 17 00:00:00 2001
From: Techcable <Techcable@techcable.net>
Date: Thu, 19 May 2016 10:55:20 -0700
Subject: [PATCH] Configurable Waterfall Metrics


diff --git a/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java b/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
index b30541b..293ec4e 100644
--- a/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
+++ b/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
@@ -84,4 +84,8 @@ public interface ProxyConfig
     // Waterfall Options
     //
 
+    /**
+     * If metrics is enabled
+     */
+    boolean isMetrics();
 }
diff --git a/proxy/src/main/java/io/github/waterfallmc/waterfall/conf/WaterfallConfiguration.java b/proxy/src/main/java/io/github/waterfallmc/waterfall/conf/WaterfallConfiguration.java
index f9e277d..056b804 100644
--- a/proxy/src/main/java/io/github/waterfallmc/waterfall/conf/WaterfallConfiguration.java
+++ b/proxy/src/main/java/io/github/waterfallmc/waterfall/conf/WaterfallConfiguration.java
@@ -9,10 +9,23 @@ import net.md_5.bungee.conf.YamlConfig;
 
 public class WaterfallConfiguration extends Configuration {
 
+    /**
+     * If metrics is enabled
+     * <p>
+     * Default is true (enabled)
+     */
+    private boolean metrics = true;
+
     @Override
     public void load() {
         super.load();
         YamlConfig config = new YamlConfig(new File("waterfall.yml"));
         config.load(false); // Load, but no permissions
+        metrics = config.getBoolean("metrics", metrics);
+    }
+
+    @Override
+    public boolean isMetrics() {
+        return metrics;
     }
 }
diff --git a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
index 7bb0862..a7dcc97 100644
--- a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
+++ b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
@@ -289,7 +289,9 @@ public class BungeeCord extends ProxyServer
                 }
             }
         }, 0, TimeUnit.MINUTES.toMillis( 5 ) );
-        metricsThread.scheduleAtFixedRate( new Metrics(), 0, TimeUnit.MINUTES.toMillis( Metrics.PING_INTERVAL ) );
+        if (config.isMetrics()) {
+            metricsThread.scheduleAtFixedRate( new Metrics(), 0, TimeUnit.MINUTES.toMillis( Metrics.PING_INTERVAL ) );
+        }
     }
 
     public void startListeners()
diff --git a/proxy/src/main/java/net/md_5/bungee/Metrics.java b/proxy/src/main/java/net/md_5/bungee/Metrics.java
index 9523987..e482e98 100644
--- a/proxy/src/main/java/net/md_5/bungee/Metrics.java
+++ b/proxy/src/main/java/net/md_5/bungee/Metrics.java
@@ -9,6 +9,7 @@ import java.net.URL;
 import java.net.URLConnection;
 import java.net.URLEncoder;
 import java.util.TimerTask;
+
 import net.md_5.bungee.api.ProxyServer;
 
 public class Metrics extends TimerTask
@@ -71,7 +72,7 @@ public class Metrics extends TimerTask
         }
 
         // Create the url
-        URL url = new URL( BASE_URL + String.format( REPORT_URL, encode( "BungeeCord" ) ) );
+        URL url = new URL( BASE_URL + String.format( REPORT_URL, encode( "Waterfall" ) ) );
 
         // Connect to the website
         URLConnection connection;
-- 
2.10.0

